@using JiraClone.Service.Dtos.Role;
@using JiraClone.Utils.Repository.Helpers;
@inject HttpClient httpClient



<h3>Paged Data Display</h3>

<table class="table">
    <thead>
        <!-- Your table headers -->
    </thead>
    <tbody>
        @foreach (var item in Items?.Data)
        {
            <tr>
                <!-- Display item properties -->
                <td>@item.Name</td>
                <td>@item.Description</td>
                <!-- Add more columns for other properties -->
            </tr>
        }
    </tbody>
</table>

<div>
    <button disabled="@IsPreviousDisabled" @onclick="LoadPreviousPage">Previous</button>
    <span>@CurrentPage</span>
    <button disabled="@IsNextDisabled" @onclick="LoadNextPage">Next</button>
</div>

@code {
    PagingResult<RoleGridDto> Items;
    int CurrentPage = 1;
    int PageSize = 10; // Set your desired page size
    bool IsPreviousDisabled => CurrentPage == 1;
    bool IsNextDisabled => Items?.TotalRows <= CurrentPage * PageSize;

    protected override async Task OnInitializedAsync()
    {
        await LoadPagedData();
    }

    private async Task LoadPagedData()
    {
        try
        {
            // Create RoleGridPagingDto object
            var pagingModel = new RoleGridPagingDto(); // You may need to populate this object with necessary data

            // Make GET request to the API endpoint
            var response = await httpClient.GetAsync("your_api_endpoint_here");

            // Check if the request was successful
            if (response.IsSuccessStatusCode)
            {
                // Deserialize the response content

                // Process the retrieved data (content)
                // Do something with the retrieved data
            }
            else
            {
                // Handle unsuccessful response (e.g., log error, display error message)
                // Example: var errorMessage = await response.Content.ReadAsStringAsync();
            }
        }
        catch (Exception ex)
        {
            // Handle exceptions
            // Example: Log the exception
        }
    }

    private async Task LoadPreviousPage()
    {
        if (!IsPreviousDisabled)
        {
            CurrentPage--;
            await LoadPagedData();
        }
    }

    private async Task LoadNextPage()
    {
        if (!IsNextDisabled)
        {
            CurrentPage++;
            await LoadPagedData();
        }
    }
}
